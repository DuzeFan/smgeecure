% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Funs.R
\name{smgeecure}
\alias{smgeecure}
\title{Marginal semi-parametric mixture cure model with generalized estimating equations}
\usage{
smgeecure(
  formula,
  cureform,
  id,
  data,
  model = c("aft", "ph"),
  corstr = c("independence", "exchangeable", "ar1"),
  Var = TRUE,
  nboot = 100,
  stdz = TRUE,
  esmax = 20,
  eps = 1e-04
)
}
\arguments{
\item{formula}{a formula expression, of the form \code{response ~ predictors}.
The \code{response} is a \code{Surv} object with right censoring. It is used to specify the covariate effects on the failure time of uncured subjects. See the documentation for \code{survreg} and \code{Surv} in package \code{survival} for details.
The expression to the right of the "~" specifies the effect of covariates on the failure time of uncured patients.}

\item{cureform}{indicator function a formula expression, of the form \code{cureform ~ predictors}. It is used to specify the effects of covariates on the cure rate. A covariate may be used in both \code{formula} and \code{cureform}.}

\item{id}{a vector which identifies the clusters. The length of \code{id} should be the same as the number of observations.}

\item{data}{a data frame in which to interpret the variables named in the \code{formula} and the \code{cureform}.}

\item{model}{specifies the model using in latency part. It can be \code{ph} which represents
the proportional hazards model, or \code{aft} which represents the accelerated failure time model.}

\item{corstr}{a character string specifying the correlation structure. Currently, the following three working correlation structures are available:
\code{independence} for the independent working correlation structure,
\code{exchangeable} for the exchangeable working correlation structure and
\code{ar1} for the first-order auto-regressive structure.}

\item{Var}{a logical value. If it is TRUE, the program returns standard error estimates for beta and gamma.
Otherwise, no standard errors are computed and only coefficient estimates are returned.
By default, \code{Var = TRUE}. Note that for both \code{model="ph"} and \code{"aft"}, the returned
standard error estimators are based on the bootstrap method.}

\item{nboot}{specifies the number of bootstrap samplings. The default value is 100.}

\item{stdz}{a logical value. If it is \code{TRUE}, all the covariates are standardized. Otherwise, non-transformed covariates are used.}

\item{esmax}{specifies the maximum iteration number. If the convergence criterion is not met,
the ES iteration will be stopped after \code{esmax} iterations and the estimates will be based on the
last ES iteration. The default \code{esmax = 100}.}

\item{eps}{specifies the relative tolerance, and is set to \code{1e-06} as the default.
The iterations are considered to be converged when the maximum relative change in the
parameters and likelihood estimates between iterations is less than the value specified.}
}
\value{
An object of class \code{smgeecure} is returned. It can be examined by \code{print.smgeecure()}.
}
\description{
Fit the semiparametric marginal proportional hazards mixture cure (PHMC) model or
the semiparametric accelerated failure time mixture cure (AFTMC) model with the generalized
estimating equations (GEE). GEE approach is generalized through the expectation-solution (ES) algorithm
to account for the correlation among the cure statuses and the dependence among the failure
times of uncured patients to improve the estimation efficiency.
}
\details{
Semiparametric marginal PHMC and AFTMC models are considered in this function.
For cure rate, a logistic regression model is employed and the probability of being cured is given
by \code{(1+exp(gamZ))^{(-1)}}.
A covariate can be used either in formula or in cureform or in both. The model parameters are
estimated by the expectation-solution (ES) algorithm and the standard error estimates are obtained
using bootstrap.
}
\examples{
### Be patient, the following examples may take several miniutes on a faster computer.

### Example 1. Fit the marginal semiparametric PHMC model for the tonsil data.

# prepare the data
data(tonsil)
tonsil <- tonsil[-c(141,136,159),]
tonsil$Sex <- ifelse(tonsil$Sex == 1, 0, 1) # 1="Female"
tonsil$Cond <- ifelse(tonsil$Cond == 1, 0, 1) # 0=no disability
tonsil$T <- ifelse(tonsil$T < 4, 0, 1)
table(tonsil$Inst)
summary(tonsil)
dim(tonsil)

# plot the KM survival curve of the tonsil data
xlim_lower <- 0; xlim_upper <- 2000; xlim_step  <- 500
ylim_lower <- 0; ylim_upper <- 1; ylim_step  <- 0.2
plot(survival::survfit(survival::Surv(Time, Status) ~ 1, data = tonsil),
     conf.int = T, mark.time = TRUE,
     ylab = "Survival Probability", xlab = "Survival Time (in Days)",
     xlim = c(xlim_lower,xlim_upper), ylim = c(ylim_lower,ylim_upper),
     xaxt = "n", yaxt = "n", cex.lab = 1.7, cex.axis = 2, cex.main = 1.7
)
axis(1,seq(xlim_lower,xlim_upper,xlim_step),seq(xlim_lower,xlim_upper,xlim_step))
axis(2,seq(ylim_lower,ylim_upper,ylim_step),seq(ylim_lower,ylim_upper,ylim_step))

# plot the KM survival curve stratified by sex and tumorsize in the tonsil data
xlim_lower <- 0; xlim_upper <- 2000; xlim_step  <- 500
ylim_lower <- 0; ylim_upper <- 1; ylim_step  <- 0.2
mycol <- c(1,2,3,4)
mylty <- c(1,2,3,4)
plot(survival::survfit(survival::Surv(Time, Status) ~ Sex + T, data = tonsil),
     conf.int = F,  mark.time = TRUE,
     ylab = "Survival Probability", xlab = "Survival Time (in Days)",
     xlim = c(xlim_lower,xlim_upper), ylim = c(ylim_lower,ylim_upper),
     lty = mylty, col = mycol,
     xaxt = "n", yaxt = "n")
axis(1,seq(xlim_lower,xlim_upper,xlim_step),seq(xlim_lower,xlim_upper,xlim_step))
axis(2,seq(ylim_lower,ylim_upper,ylim_step),seq(ylim_lower,ylim_upper,ylim_step))
legend("topright", c("Massive/Female","Massive/Male","Non-massive/Female","Non-massive/Male"),
       cex = 1, bty="n",col = mycol, lty = mylty)

# fit marginal semi-parametric AFTMC model (exchangeable correlation)
set.seed(1)
tonsil.aft.gee.ex <- smgeecure(
  formula = Surv(Time, Status) ~ Sex + factor(Grade) + Age + Cond + T,
  cureform = ~ Sex + factor(Grade) + Age + Cond + T,
  id = tonsil$Inst, data = tonsil, model = "aft", corstr = "exchangeable",
  Var = T, nboot = 100
)
print.smgeecure(tonsil.aft.gee.ex)

# fit marginal semi-parametric AFTMC model (independence correlation)
set.seed(1)
tonsil.aft.gee.ind <- smgeecure(
  formula = Surv(Time, Status) ~ Sex + factor(Grade) + Age + Cond + T,
  cureform = ~ Sex + factor(Grade) + Age + Cond + T,
  id = tonsil$Inst, data = tonsil, model = "aft", corstr = "independence",
  Var = T, nboot = 100
)
print.smgeecure(tonsil.aft.gee.ind)

# fit marginal semi-parametric PHMC model (exchangeable correlation)
set.seed(1)
tonsil.ph.gee.ex <- smgeecure(
  formula = Surv(Time, Status) ~ Sex + factor(Grade) + Age + Cond + T,
  cureform = ~ Sex + factor(Grade) + Age + Cond + T,
  id = tonsil$Inst, data = tonsil, model = "ph", corstr = "exchangeable",
  Var = T,nboot=100
)
print.smgeecure(tonsil.ph.gee.ex)

# fit marginal semi-parametric PHMC model (independence correlation)
set.seed(1)
tonsil.ph.gee.ind <- smgeecure(
  formula = Surv(Time, Status) ~ Sex + factor(Grade) + Age + Cond + T,
  cureform = ~ Sex + factor(Grade) + Age + Cond + T,
  id = tonsil$Inst, data = tonsil, model = "ph", corstr = "independence",
  Var = F, nboot = 100
)
print.smgeecure(tonsil.ph.gee.ind)


### Example 2. Fit the marginal parametric AFTMC and PHMC model for the smoking cessation data.

# prepare the data
data(smoking)
smoking$Time <- ifelse(smoking$Relapse == 0, smoking$Timept1,
                       (smoking$Timept1 + smoking$Timept2)/2)
data <- smoking
id <- smoking$Zip
table(smoking$Zip)

# plot the KM survival curve of the smoking cessation data
xlim_lower <- 0; xlim_upper <- 6; xlim_step  <- 1
ylim_lower <- 0.5; ylim_upper <- 1; ylim_step  <- 0.2
plot(survival::survfit(survival::Surv(Time, Relapse) ~ 1, data = smoking),
     conf.int = T, mark.time = TRUE,
     ylab = "Survival Probability", xlab = "Survival Time (in Years)",
     xlim = c(xlim_lower,xlim_upper), ylim = c(ylim_lower,ylim_upper),
     xaxt = "n", yaxt = "n" #, bty = "n",
)
axis(1,seq(xlim_lower,xlim_upper,xlim_step),seq(xlim_lower,xlim_upper,xlim_step))
axis(2,seq(ylim_lower,ylim_upper,ylim_step),seq(ylim_lower,ylim_upper,ylim_step))

# plot the KM survival curve stratified by intervention type in the smoking cessation data
xlim_lower <- 0; xlim_upper <- 6; xlim_step  <- 1
ylim_lower <- 0.4; ylim_upper <- 1; ylim_step  <- 0.2
mylty <- c(1,2); mycol <- c("black","red")
plot(survival::survfit(survival::Surv(Time, Relapse) ~ SI.UC, data = smoking),
     conf.int = F,  mark.time = TRUE,
     ylab = "Survival Probability", xlab = "Survival Time (in Years)",
     xlim = c(xlim_lower,xlim_upper), ylim = c(ylim_lower,ylim_upper),
     lty = mylty, col = mycol,
     xaxt = "n", yaxt = "n")
axis(1,seq(xlim_lower,xlim_upper,xlim_step),seq(xlim_lower,xlim_upper,xlim_step))
axis(2,seq(ylim_lower,ylim_upper,ylim_step),seq(ylim_lower,ylim_upper,ylim_step))
legend("bottomleft", c("UC","SI"), cex = 1.3, bty="n",
       col = mycol, lty = mylty)

# plot the Cum
UncuredPatients <- smoking$Relapse==1 # smoking$Time <= max(smoking$Time[smoking$Relapse==1])
xlim_lower <- 0; xlim_upper <- 6; xlim_step  <- 1
ylim_lower <- -5; ylim_upper <- 2; ylim_step  <- 1
mylty <- c(1,2); mycol <- c("black","red")
plot(survival::survfit(survival::Surv(Time, Relapse) ~ SI.UC,
                       data = smoking, subset=UncuredPatients,
                       stype=1),
     conf.int = F,  mark.time = FALSE, cumhaz = TRUE, log="xy",
     ylab = "Logarithm of the Cumulative Hazard Function",
     xlab = "Logarithm of the Survival Time (in Years)",
     # xlim = c(xlim_lower,xlim_upper), ylim = c(ylim_lower,ylim_upper),
     lty = mylty, col = mycol,
     xaxt = "n", yaxt = "n")
axis(1,seq(xlim_lower,xlim_upper,xlim_step),seq(xlim_lower,xlim_upper,xlim_step))
axis(2,exp(seq(ylim_lower,ylim_upper,ylim_step)),seq(ylim_lower,ylim_upper,ylim_step))
legend("bottomright", c("UC","SI"), cex = 1.3, #bty="n",
       col = mycol, lty = mylty)

# plot the KM survival curve stratified by intervention type and sex in the smoking cessation data
plot(survfit(Surv(Time, Relapse) ~ SexF + (SI.UC), data = smoking),
     ylab = "Survival function", xlab = "Years", ylim = c(0.5, 1),
     xlim = c(0, 6), lty = 1:4, col = 1:4)
legend(0.5, 0.63, c("SI/Male", "SI/Female", "UC/Female", "UC/Male"), cex = 1,
       col = c(2, 4, 3, 1), lty = c(2, 4, 3, 1))

# fit marginal semi-parametric AFTMC model (exchangeable correlation)
set.seed(1)
smoking.aft.gee.ex <- smgeecure(
  formula = Surv(Time, Relapse) ~ SexF + Duration + SI.UC + F10Cigs + SexF * SI.UC,
  cureform = ~ SexF + Duration + SI.UC + F10Cigs + SexF * SI.UC,
  id = smoking$Zip, data = smoking, model = "aft", corstr = "exchangeable",
  Var = T, nboot = 100
)
print.smgeecure(smoking.aft.gee.ex)

# fit marginal semi-parametric AFTMC model (independence correlation)
set.seed(1)
smoking.aft.gee.ind <- smgeecure(
  formula = Surv(Time, Relapse) ~ SexF + Duration + SI.UC + F10Cigs + SexF * SI.UC,
  cureform = ~ SexF + Duration + SI.UC + F10Cigs + SexF * SI.UC,
  id = smoking$Zip, data = smoking, model = "aft", corstr = "independence",
  Var = T, nboot = 100
)
print.smgeecure(smoking.aft.gee.ind)

# fit marginal semi-parametric PHMC model (exchangeable correlation)
set.seed(1)
smoking.ph.gee.ex <- smgeecure(
  formula = Surv(Time, Relapse) ~ SexF + Duration + SI.UC + F10Cigs + SexF * SI.UC,
  cureform = ~ SexF + Duration + SI.UC + F10Cigs + SexF * SI.UC,
  id = smoking$Zip, data = smoking, model = "ph", corstr = "exchangeable",
  Var = T, nboot = 100
)
print.smgeecure(smoking.ph.gee.ex)

# fit marginal semi-parametric PHMC model (independence correlation)
set.seed(1)
smoking.ph.gee.ind <- smgeecure(
  formula = Surv(Time, Relapse) ~ SexF + Duration + SI.UC + F10Cigs + SexF * SI.UC,
  cureform = ~ SexF + Duration + SI.UC + F10Cigs + SexF * SI.UC,
  id = smoking$Zip, data = smoking, model = "ph", corstr = "independence",
  Var = T, nboot = 100
)
print.smgeecure(smoking.ph.gee.ind)

}
\references{
Cai, C., Zou, Y., Peng, Y., and Zhang, J. (2012). smcure: An r-package for estimating semiparametric
mixture cure models. Computer methods and programs in biomedicine, 108(3):1255.

Zhang, J. and Peng, Y. (2007). A new estimation method for the semiparametric accelerated
failure time mixture cure model. Statistics in medicine, 26(16):3157–3171.

Niu, Y., Song, L., Liu, Y, and Peng, Y. (2018) Modeling clustered long-term survivors using marginal
mixture cure model. Biometrical Journal, doi: 10.1002/bjmj.201700114.
}
